@model demo_project.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>@ViewBag.err</h2>
<h2>@ViewBag.ok</h2>


@using (Html.BeginForm("Create", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Category, new SelectList(new[] { "men", "women", "kids" }), "Select Category", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Price, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Quantity, new SelectList(new[] { "1", "2", "3", "4" }), "Select Quantity", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sdescription, "Short Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Sdescription, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.Sdescription, new { htmlAttributes = new { @class = "form-control" }, required = "required", cols = "50" })
                @Html.ValidationMessageFor(model => model.Sdescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ldescription, "Long Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Ldescription, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.Ldescription, new { htmlAttributes = new { @class = "form-control" }, required = "required", cols = "50" })
                @Html.ValidationMessageFor(model => model.Ldescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Simage, "Small Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Simage, new { htmlAttributes = new { @class = "form-control" } })*@
                <input class="form-control" type="file" name="simage" required />
                @Html.ValidationMessageFor(model => model.Simage, "", new { @class = "text-danger" })
                @{
                    if (ViewBag.limage != null)
                    {
                        <p style="color:red">@ViewBag.limage</p>
                    }
                }
                <p class="text-danger">@ViewBag.simage_err</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Limage, "Large Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Limage, new { htmlAttributes = new { @class = "form-control" } })*@
                <input class="form-control" type="file" name="limage" required />
                @Html.ValidationMessageFor(model => model.Limage, "", new { @class = "text-danger" })
                @{
                    if (ViewBag.limage != null)
                    {
                        <p style="color:red">@ViewBag.limage</p>
                    }
                }
                <p class="text-danger">@ViewBag.limage_err</p>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Product" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Product List", "Index")
</div>
